(function () {/**
 * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/almond for details
 */
//Going sloppy to avoid 'use strict' string cost, but strict practices should
//be followed.
/*jslint sloppy: true */
/*global setTimeout: false */

var requirejs, require, define;
(function (undef) {
    var main, req, makeMap, handlers,
        defined = {},
        waiting = {},
        config = {},
        defining = {},
        hasOwn = Object.prototype.hasOwnProperty,
        aps = [].slice,
        jsSuffixRegExp = /\.js$/;

    function hasProp(obj, prop) {
        return hasOwn.call(obj, prop);
    }

    /**
     * Given a relative module name, like ./something, normalize it to
     * a real name that can be mapped to a path.
     * @param {String} name the relative name
     * @param {String} baseName a real name that the name arg is relative
     * to.
     * @returns {String} normalized name
     */
    function normalize(name, baseName) {
        var nameParts, nameSegment, mapValue, foundMap, lastIndex,
            foundI, foundStarMap, starI, i, j, part,
            baseParts = baseName && baseName.split("/"),
            map = config.map,
            starMap = (map && map['*']) || {};

        //Adjust any relative paths.
        if (name && name.charAt(0) === ".") {
            //If have a base name, try to normalize against it,
            //otherwise, assume it is a top-level require that will
            //be relative to baseUrl in the end.
            if (baseName) {
                name = name.split('/');
                lastIndex = name.length - 1;

                // Node .js allowance:
                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {
                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');
                }

                //Lop off the last part of baseParts, so that . matches the
                //"directory" and not name of the baseName's module. For instance,
                //baseName of "one/two/three", maps to "one/two/three.js", but we
                //want the directory, "one/two" for this normalization.
                name = baseParts.slice(0, baseParts.length - 1).concat(name);

                //start trimDots
                for (i = 0; i < name.length; i += 1) {
                    part = name[i];
                    if (part === ".") {
                        name.splice(i, 1);
                        i -= 1;
                    } else if (part === "..") {
                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {
                            //End of the line. Keep at least one non-dot
                            //path segment at the front so it can be mapped
                            //correctly to disk. Otherwise, there is likely
                            //no path mapping for a path starting with '..'.
                            //This can still fail, but catches the most reasonable
                            //uses of ..
                            break;
                        } else if (i > 0) {
                            name.splice(i - 1, 2);
                            i -= 2;
                        }
                    }
                }
                //end trimDots

                name = name.join("/");
            } else if (name.indexOf('./') === 0) {
                // No baseName, so this is ID is resolved relative
                // to baseUrl, pull off the leading dot.
                name = name.substring(2);
            }
        }

        //Apply map config if available.
        if ((baseParts || starMap) && map) {
            nameParts = name.split('/');

            for (i = nameParts.length; i > 0; i -= 1) {
                nameSegment = nameParts.slice(0, i).join("/");

                if (baseParts) {
                    //Find the longest baseName segment match in the config.
                    //So, do joins on the biggest to smallest lengths of baseParts.
                    for (j = baseParts.length; j > 0; j -= 1) {
                        mapValue = map[baseParts.slice(0, j).join('/')];

                        //baseName segment has  config, find if it has one for
                        //this name.
                        if (mapValue) {
                            mapValue = mapValue[nameSegment];
                            if (mapValue) {
                                //Match, update name to the new value.
                                foundMap = mapValue;
                                foundI = i;
                                break;
                            }
                        }
                    }
                }

                if (foundMap) {
                    break;
                }

                //Check for a star map match, but just hold on to it,
                //if there is a shorter segment match later in a matching
                //config, then favor over this star map.
                if (!foundStarMap && starMap && starMap[nameSegment]) {
                    foundStarMap = starMap[nameSegment];
                    starI = i;
                }
            }

            if (!foundMap && foundStarMap) {
                foundMap = foundStarMap;
                foundI = starI;
            }

            if (foundMap) {
                nameParts.splice(0, foundI, foundMap);
                name = nameParts.join('/');
            }
        }

        return name;
    }

    function makeRequire(relName, forceSync) {
        return function () {
            //A version of a require function that passes a moduleName
            //value for items that may need to
            //look up paths relative to the moduleName
            var args = aps.call(arguments, 0);

            //If first arg is not require('string'), and there is only
            //one arg, it is the array form without a callback. Insert
            //a null so that the following concat is correct.
            if (typeof args[0] !== 'string' && args.length === 1) {
                args.push(null);
            }
            return req.apply(undef, args.concat([relName, forceSync]));
        };
    }

    function makeNormalize(relName) {
        return function (name) {
            return normalize(name, relName);
        };
    }

    function makeLoad(depName) {
        return function (value) {
            defined[depName] = value;
        };
    }

    function callDep(name) {
        if (hasProp(waiting, name)) {
            var args = waiting[name];
            delete waiting[name];
            defining[name] = true;
            main.apply(undef, args);
        }

        if (!hasProp(defined, name) && !hasProp(defining, name)) {
            throw new Error('No ' + name);
        }
        return defined[name];
    }

    //Turns a plugin!resource to [plugin, resource]
    //with the plugin being undefined if the name
    //did not have a plugin prefix.
    function splitPrefix(name) {
        var prefix,
            index = name ? name.indexOf('!') : -1;
        if (index > -1) {
            prefix = name.substring(0, index);
            name = name.substring(index + 1, name.length);
        }
        return [prefix, name];
    }

    /**
     * Makes a name map, normalizing the name, and using a plugin
     * for normalization if necessary. Grabs a ref to plugin
     * too, as an optimization.
     */
    makeMap = function (name, relName) {
        var plugin,
            parts = splitPrefix(name),
            prefix = parts[0];

        name = parts[1];

        if (prefix) {
            prefix = normalize(prefix, relName);
            plugin = callDep(prefix);
        }

        //Normalize according
        if (prefix) {
            if (plugin && plugin.normalize) {
                name = plugin.normalize(name, makeNormalize(relName));
            } else {
                name = normalize(name, relName);
            }
        } else {
            name = normalize(name, relName);
            parts = splitPrefix(name);
            prefix = parts[0];
            name = parts[1];
            if (prefix) {
                plugin = callDep(prefix);
            }
        }

        //Using ridiculous property names for space reasons
        return {
            f: prefix ? prefix + '!' + name : name, //fullName
            n: name,
            pr: prefix,
            p: plugin
        };
    };

    function makeConfig(name) {
        return function () {
            return (config && config.config && config.config[name]) || {};
        };
    }

    handlers = {
        require: function (name) {
            return makeRequire(name);
        },
        exports: function (name) {
            var e = defined[name];
            if (typeof e !== 'undefined') {
                return e;
            } else {
                return (defined[name] = {});
            }
        },
        module: function (name) {
            return {
                id: name,
                uri: '',
                exports: defined[name],
                config: makeConfig(name)
            };
        }
    };

    main = function (name, deps, callback, relName) {
        var cjsModule, depName, ret, map, i,
            args = [],
            callbackType = typeof callback,
            usingExports;

        //Use name if no relName
        relName = relName || name;

        //Call the callback to define the module, if necessary.
        if (callbackType === 'undefined' || callbackType === 'function') {
            //Pull out the defined dependencies and pass the ordered
            //values to the callback.
            //Default to [require, exports, module] if no deps
            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;
            for (i = 0; i < deps.length; i += 1) {
                map = makeMap(deps[i], relName);
                depName = map.f;

                //Fast path CommonJS standard dependencies.
                if (depName === "require") {
                    args[i] = handlers.require(name);
                } else if (depName === "exports") {
                    //CommonJS module spec 1.1
                    args[i] = handlers.exports(name);
                    usingExports = true;
                } else if (depName === "module") {
                    //CommonJS module spec 1.1
                    cjsModule = args[i] = handlers.module(name);
                } else if (hasProp(defined, depName) ||
                           hasProp(waiting, depName) ||
                           hasProp(defining, depName)) {
                    args[i] = callDep(depName);
                } else if (map.p) {
                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});
                    args[i] = defined[depName];
                } else {
                    throw new Error(name + ' missing ' + depName);
                }
            }

            ret = callback ? callback.apply(defined[name], args) : undefined;

            if (name) {
                //If setting exports via "module" is in play,
                //favor that over return value and exports. After that,
                //favor a non-undefined return value over exports use.
                if (cjsModule && cjsModule.exports !== undef &&
                        cjsModule.exports !== defined[name]) {
                    defined[name] = cjsModule.exports;
                } else if (ret !== undef || !usingExports) {
                    //Use the return value from the function.
                    defined[name] = ret;
                }
            }
        } else if (name) {
            //May just be an object definition for the module. Only
            //worry about defining if have a module name.
            defined[name] = callback;
        }
    };

    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {
        if (typeof deps === "string") {
            if (handlers[deps]) {
                //callback in this case is really relName
                return handlers[deps](callback);
            }
            //Just return the module wanted. In this scenario, the
            //deps arg is the module name, and second arg (if passed)
            //is just the relName.
            //Normalize module name, if it contains . or ..
            return callDep(makeMap(deps, callback).f);
        } else if (!deps.splice) {
            //deps is a config object, not an array.
            config = deps;
            if (config.deps) {
                req(config.deps, config.callback);
            }
            if (!callback) {
                return;
            }

            if (callback.splice) {
                //callback is an array, which means it is a dependency list.
                //Adjust args if there are dependencies
                deps = callback;
                callback = relName;
                relName = null;
            } else {
                deps = undef;
            }
        }

        //Support require(['a'])
        callback = callback || function () {};

        //If relName is a function, it is an errback handler,
        //so remove it.
        if (typeof relName === 'function') {
            relName = forceSync;
            forceSync = alt;
        }

        //Simulate async callback;
        if (forceSync) {
            main(undef, deps, callback, relName);
        } else {
            //Using a non-zero value because of concern for what old browsers
            //do, and latest browsers "upgrade" to 4 if lower value is used:
            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:
            //If want a value immediately, use require('id') instead -- something
            //that works in almond on the global level, but not guaranteed and
            //unlikely to work in other AMD implementations.
            setTimeout(function () {
                main(undef, deps, callback, relName);
            }, 4);
        }

        return req;
    };

    /**
     * Just drops the config on the floor, but returns req in case
     * the config return value is used.
     */
    req.config = function (cfg) {
        return req(cfg);
    };

    /**
     * Expose module registry for debugging and tooling
     */
    requirejs._defined = defined;

    define = function (name, deps, callback) {
        if (typeof name !== 'string') {
            throw new Error('See almond README: incorrect module build, no module name');
        }

        //This module may not have dependencies
        if (!deps.splice) {
            //deps is not an array, so probably means
            //an object literal or factory function for
            //the value. Adjust args.
            callback = deps;
            deps = [];
        }

        if (!hasProp(defined, name) && !hasProp(waiting, name)) {
            waiting[name] = [name, deps, callback];
        }
    };

    define.amd = {
        jQuery: true
    };
}());

define("../vendor/almond", function(){});

/**
 * @license RequireJS text 2.0.10 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/requirejs/text for details
 */
/*jslint regexp: true */
/*global require, XMLHttpRequest, ActiveXObject,
  define, window, process, Packages,
  java, location, Components, FileUtils */

define('text',['module'], function (module) {
    'use strict';

    var text, fs, Cc, Ci, xpcIsWindows,
        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],
        xmlRegExp = /^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,
        bodyRegExp = /<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,
        hasLocation = typeof location !== 'undefined' && location.href,
        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\:/, ''),
        defaultHostName = hasLocation && location.hostname,
        defaultPort = hasLocation && (location.port || undefined),
        buildMap = {},
        masterConfig = (module.config && module.config()) || {};

    text = {
        version: '2.0.10',

        strip: function (content) {
            //Strips <?xml ...?> declarations so that external SVG and XML
            //documents can be added to a document without worry. Also, if the string
            //is an HTML document, only the part inside the body tag is returned.
            if (content) {
                content = content.replace(xmlRegExp, "");
                var matches = content.match(bodyRegExp);
                if (matches) {
                    content = matches[1];
                }
            } else {
                content = "";
            }
            return content;
        },

        jsEscape: function (content) {
            return content.replace(/(['\\])/g, '\\$1')
                .replace(/[\f]/g, "\\f")
                .replace(/[\b]/g, "\\b")
                .replace(/[\n]/g, "\\n")
                .replace(/[\t]/g, "\\t")
                .replace(/[\r]/g, "\\r")
                .replace(/[\u2028]/g, "\\u2028")
                .replace(/[\u2029]/g, "\\u2029");
        },

        createXhr: masterConfig.createXhr || function () {
            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.
            var xhr, i, progId;
            if (typeof XMLHttpRequest !== "undefined") {
                return new XMLHttpRequest();
            } else if (typeof ActiveXObject !== "undefined") {
                for (i = 0; i < 3; i += 1) {
                    progId = progIds[i];
                    try {
                        xhr = new ActiveXObject(progId);
                    } catch (e) {}

                    if (xhr) {
                        progIds = [progId];  // so faster next time
                        break;
                    }
                }
            }

            return xhr;
        },

        /**
         * Parses a resource name into its component parts. Resource names
         * look like: module/name.ext!strip, where the !strip part is
         * optional.
         * @param {String} name the resource name
         * @returns {Object} with properties "moduleName", "ext" and "strip"
         * where strip is a boolean.
         */
        parseName: function (name) {
            var modName, ext, temp,
                strip = false,
                index = name.indexOf("."),
                isRelative = name.indexOf('./') === 0 ||
                             name.indexOf('../') === 0;

            if (index !== -1 && (!isRelative || index > 1)) {
                modName = name.substring(0, index);
                ext = name.substring(index + 1, name.length);
            } else {
                modName = name;
            }

            temp = ext || modName;
            index = temp.indexOf("!");
            if (index !== -1) {
                //Pull off the strip arg.
                strip = temp.substring(index + 1) === "strip";
                temp = temp.substring(0, index);
                if (ext) {
                    ext = temp;
                } else {
                    modName = temp;
                }
            }

            return {
                moduleName: modName,
                ext: ext,
                strip: strip
            };
        },

        xdRegExp: /^((\w+)\:)?\/\/([^\/\\]+)/,

        /**
         * Is an URL on another domain. Only works for browser use, returns
         * false in non-browser environments. Only used to know if an
         * optimized .js version of a text resource should be loaded
         * instead.
         * @param {String} url
         * @returns Boolean
         */
        useXhr: function (url, protocol, hostname, port) {
            var uProtocol, uHostName, uPort,
                match = text.xdRegExp.exec(url);
            if (!match) {
                return true;
            }
            uProtocol = match[2];
            uHostName = match[3];

            uHostName = uHostName.split(':');
            uPort = uHostName[1];
            uHostName = uHostName[0];

            return (!uProtocol || uProtocol === protocol) &&
                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&
                   ((!uPort && !uHostName) || uPort === port);
        },

        finishLoad: function (name, strip, content, onLoad) {
            content = strip ? text.strip(content) : content;
            if (masterConfig.isBuild) {
                buildMap[name] = content;
            }
            onLoad(content);
        },

        load: function (name, req, onLoad, config) {
            //Name has format: some.module.filext!strip
            //The strip part is optional.
            //if strip is present, then that means only get the string contents
            //inside a body tag in an HTML string. For XML/SVG content it means
            //removing the <?xml ...?> declarations so the content can be inserted
            //into the current doc without problems.

            // Do not bother with the work if a build and text will
            // not be inlined.
            if (config.isBuild && !config.inlineText) {
                onLoad();
                return;
            }

            masterConfig.isBuild = config.isBuild;

            var parsed = text.parseName(name),
                nonStripName = parsed.moduleName +
                    (parsed.ext ? '.' + parsed.ext : ''),
                url = req.toUrl(nonStripName),
                useXhr = (masterConfig.useXhr) ||
                         text.useXhr;

            // Do not load if it is an empty: url
            if (url.indexOf('empty:') === 0) {
                onLoad();
                return;
            }

            //Load the text. Use XHR if possible and in a browser.
            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {
                text.get(url, function (content) {
                    text.finishLoad(name, parsed.strip, content, onLoad);
                }, function (err) {
                    if (onLoad.error) {
                        onLoad.error(err);
                    }
                });
            } else {
                //Need to fetch the resource across domains. Assume
                //the resource has been optimized into a JS module. Fetch
                //by the module name + extension, but do not include the
                //!strip part to avoid file system issues.
                req([nonStripName], function (content) {
                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,
                                    parsed.strip, content, onLoad);
                });
            }
        },

        write: function (pluginName, moduleName, write, config) {
            if (buildMap.hasOwnProperty(moduleName)) {
                var content = text.jsEscape(buildMap[moduleName]);
                write.asModule(pluginName + "!" + moduleName,
                               "define(function () { return '" +
                                   content +
                               "';});\n");
            }
        },

        writeFile: function (pluginName, moduleName, req, write, config) {
            var parsed = text.parseName(moduleName),
                extPart = parsed.ext ? '.' + parsed.ext : '',
                nonStripName = parsed.moduleName + extPart,
                //Use a '.js' file name so that it indicates it is a
                //script that can be loaded across domains.
                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';

            //Leverage own load() method to load plugin value, but only
            //write out values that do not have the strip argument,
            //to avoid any potential issues with ! in file names.
            text.load(nonStripName, req, function (value) {
                //Use own write() method to construct full module value.
                //But need to create shell that translates writeFile's
                //write() to the right interface.
                var textWrite = function (contents) {
                    return write(fileName, contents);
                };
                textWrite.asModule = function (moduleName, contents) {
                    return write.asModule(moduleName, fileName, contents);
                };

                text.write(pluginName, nonStripName, textWrite, config);
            }, config);
        }
    };

    if (masterConfig.env === 'node' || (!masterConfig.env &&
            typeof process !== "undefined" &&
            process.versions &&
            !!process.versions.node &&
            !process.versions['node-webkit'])) {
        //Using special require.nodeRequire, something added by r.js.
        fs = require.nodeRequire('fs');

        text.get = function (url, callback, errback) {
            try {
                var file = fs.readFileSync(url, 'utf8');
                //Remove BOM (Byte Mark Order) from utf8 files if it is there.
                if (file.indexOf('\uFEFF') === 0) {
                    file = file.substring(1);
                }
                callback(file);
            } catch (e) {
                errback(e);
            }
        };
    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&
            text.createXhr())) {
        text.get = function (url, callback, errback, headers) {
            var xhr = text.createXhr(), header;
            xhr.open('GET', url, true);

            //Allow plugins direct access to xhr headers
            if (headers) {
                for (header in headers) {
                    if (headers.hasOwnProperty(header)) {
                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);
                    }
                }
            }

            //Allow overrides specified in config
            if (masterConfig.onXhr) {
                masterConfig.onXhr(xhr, url);
            }

            xhr.onreadystatechange = function (evt) {
                var status, err;
                //Do not explicitly handle errors, those should be
                //visible via console output in the browser.
                if (xhr.readyState === 4) {
                    status = xhr.status;
                    if (status > 399 && status < 600) {
                        //An http 4xx or 5xx error. Signal an error.
                        err = new Error(url + ' HTTP status: ' + status);
                        err.xhr = xhr;
                        errback(err);
                    } else {
                        callback(xhr.responseText);
                    }

                    if (masterConfig.onXhrComplete) {
                        masterConfig.onXhrComplete(xhr, url);
                    }
                }
            };
            xhr.send(null);
        };
    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&
            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {
        //Why Java, why is this so awkward?
        text.get = function (url, callback) {
            var stringBuffer, line,
                encoding = "utf-8",
                file = new java.io.File(url),
                lineSeparator = java.lang.System.getProperty("line.separator"),
                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),
                content = '';
            try {
                stringBuffer = new java.lang.StringBuffer();
                line = input.readLine();

                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324
                // http://www.unicode.org/faq/utf_bom.html

                // Note that when we use utf-8, the BOM should appear as "EF BB BF", but it doesn't due to this bug in the JDK:
                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058
                if (line && line.length() && line.charAt(0) === 0xfeff) {
                    // Eat the BOM, since we've already found the encoding on this file,
                    // and we plan to concatenating this buffer with others; the BOM should
                    // only appear at the top of a file.
                    line = line.substring(1);
                }

                if (line !== null) {
                    stringBuffer.append(line);
                }

                while ((line = input.readLine()) !== null) {
                    stringBuffer.append(lineSeparator);
                    stringBuffer.append(line);
                }
                //Make sure we return a JavaScript string and not a Java string.
                content = String(stringBuffer.toString()); //String
            } finally {
                input.close();
            }
            callback(content);
        };
    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&
            typeof Components !== 'undefined' && Components.classes &&
            Components.interfaces)) {
        //Avert your gaze!
        Cc = Components.classes,
        Ci = Components.interfaces;
        Components.utils['import']('resource://gre/modules/FileUtils.jsm');
        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);

        text.get = function (url, callback) {
            var inStream, convertStream, fileObj,
                readData = {};

            if (xpcIsWindows) {
                url = url.replace(/\//g, '\\');
            }

            fileObj = new FileUtils.File(url);

            //XPCOM, you so crazy
            try {
                inStream = Cc['@mozilla.org/network/file-input-stream;1']
                           .createInstance(Ci.nsIFileInputStream);
                inStream.init(fileObj, 1, 0, false);

                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']
                                .createInstance(Ci.nsIConverterInputStream);
                convertStream.init(inStream, "utf-8", inStream.available(),
                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);

                convertStream.readString(inStream.available(), readData);
                convertStream.close();
                inStream.close();
                callback(readData.value);
            } catch (e) {
                throw new Error((fileObj && fileObj.path || '') + ': ' + e);
            }
        };
    }
    return text;
});

define('text!../templates/shortcode-builder-spp-template.html',[],function () { return '<% var def = smart_podcast_player_user_settings; %>\r\n\r\n<div class="spp-sb">\r\n\t<span class="spp-sb-title">Smart Podcast Player Shortcode</span>\r\n\t<p><em>For building the full podcast player. <a target="_blank"\r\n\t\thref="http://support.smartpodcastplayer.com/article/56-getting-started-8-adding-the-full-smart-podcast-player">\r\n\t\tClick here</a> to watch a support video.</em></p>\r\n\t<p><em>Enter default values in Settings —&gt; Smart Podcast Player.</em></p>\r\n\r\n\t<hr>\r\n\r\n\t<p class="spp-sb-header">1. Enter your podcast\'s RSS feed</p>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-url" class="spp-sb-half">URL</label>\r\n\t\t<input type="text" id="spp-url" value="<%= sc.url ? sc.url : def.url ? def.url : "" %>" class="spp-sb-half">\r\n\t</div>\r\n\r\n\t<hr>\r\n\r\n\t<p class="spp-sb-header">2. Customize the appearance</p>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-color" class="spp-sb-half">Highlight color (Hex) #</label>\r\n\t\t<input type="text" id="spp-color" value="<%= sc.color ? sc.color : def.bg_color ? def.bg_color : "" %>" class="spp-sb-half">\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-style" class="spp-sb-half">Style</label>\r\n\t\t<select id="spp-style" class="spp-sb-half">\r\n\t\t\t<% if (sc.style) { %>\r\n\t\t\t\t<option value="light" <%= sc.style == "light" ? "selected" : "" %>>Light</option>\r\n\t\t\t\t<option value="dark"  <%= sc.style == "dark"  ? "selected" : "" %>>Dark</option>\r\n\t\t\t<% } else { %>\r\n\t\t\t\t<option value="light" <%= def.style && def.style == "dark" ? "" : "selected" %>>Light</option>\r\n\t\t\t\t<option value="dark"  <%= def.style && def.style == "dark" ? "selected" : "" %>>Dark</option>\r\n\t\t\t<% } %>\r\n\t\t</select>\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-show-name" class="spp-sb-half">Show name</label>\r\n\t\t<input type="text" id="spp-show-name" value="<%= sc.show_name ? sc.show_name : def.show_name ? def.show_name : "" %>" class="spp-sb-half">\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<em>&emsp;Leave blank to get your show name from your RSS feed.</em>\r\n\t</div>\r\n\r\n\t<hr>\r\n\r\n\t<p class="spp-sb-header">3. Customize the buttons</p>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-social" class="spp-sb-half">Display the social sharing buttons</label>\r\n\t\t<select id="spp-social" class="spp-sb-half">\r\n\t\t\t<% if (sc.social) { %>\r\n\t\t\t\t<option value="yes" <%= sc.social == "true" ? "selected" : "" %>>Yes</option>\r\n\t\t\t\t<option value="no"  <%= sc.social == "true" ? "" : "selected" %>>No</option>\r\n\t\t\t<% } else { %>\r\n\t\t\t\t<option value="yes">Yes</option>\r\n\t\t\t\t<option value="no">No</option>\r\n\t\t\t<% } %>\r\n\t\t</select>\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<span class="spp-sb-half">Social sharing buttons</span>\r\n\t\t<div class="spp-sb-half">\r\n\t\t\t<% var social_customized = sc.social \r\n\t\t\t\t\t|| sc.social_twitter\r\n\t\t\t\t\t|| sc.social_facebook\r\n\t\t\t\t\t|| sc.social_gplus\r\n\t\t\t\t\t|| sc.social_linkedin\r\n\t\t\t\t\t|| sc.social_pinterest\r\n\t\t\t\t\t|| sc.social_email\r\n\t\t\t\t\t%>\r\n\t\t\t<% if (social_customized) { %>\r\n\t\t\t\t<table><tr><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-twitter" <%= sc.social_twitter && sc.social_twitter == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-twitter">Twitter</label>\r\n\t\t\t\t\t\t</td><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-facebook" <%= sc.social_facebook && sc.social_facebook == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-facebook">Facebook</label>\r\n\t\t\t\t\t</td></tr><tr><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-gplus" <%= sc.social_gplus && sc.social_gplus == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-gplus">Google+</label>\r\n\t\t\t\t\t\t</td><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-linkedin" <%= sc.social_linkedin && sc.social_linkedin == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-linkedin">LinkedIn</label>\r\n\t\t\t\t\t</td></tr><tr><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-pinterest" <%= sc.social_pinterest && sc.social_pinterest == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-pinterest">Pinterest</label>\r\n\t\t\t\t\t\t</td><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-email"  <%= sc.social_email && sc.social_email == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-email">Email</label>\r\n\t\t\t\t</td></tr></table>\r\n\t\t\t<% } else { %>\r\n\t\t\t\t<table><tr><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-twitter" <%= sc.social_twitter && sc.social_twitter == "false" ? "" : "checked" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-twitter">Twitter</label>\r\n\t\t\t\t\t\t</td><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-facebook" <%= sc.social_facebook && sc.social_facebook == "false" ? "" : "checked" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-facebook">Facebook</label>\r\n\t\t\t\t\t</td></tr><tr><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-gplus" <%= sc.social_gplus && sc.social_gplus == "false" ? "" : "checked" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-gplus">Google+</label>\r\n\t\t\t\t\t\t</td><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-linkedin" <%= sc.social_linkedin && sc.social_linkedin == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-linkedin">LinkedIn</label>\r\n\t\t\t\t\t</td></tr><tr><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-pinterest" <%= sc.social_pinterest && sc.social_pinterest == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-pinterest">Pinterest</label>\r\n\t\t\t\t\t\t</td><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-email"  <%= sc.social_email && sc.social_email == "false" ? "" : "checked" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-email">Email</label>\r\n\t\t\t\t</td></tr></table>\r\n\t\t\t<% } %>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-download" class="spp-sb-half">Display download button</label>\r\n\t\t<select id="spp-download" class="spp-sb-half">\r\n\t\t\t<% if (sc.download) { %>\r\n\t\t\t\t<option value="true"  <%= sc.download && sc.download == "false" ? "" : "selected" %> >Yes</option>\r\n\t\t\t\t<option value="false" <%= sc.download && sc.download == "false" ? "selected" : "" %> >No</option>\r\n\t\t\t<% } else { %>\r\n\t\t\t\t<option value="true" <%= def.download && def.download == "false" ? "" : "selected" %> >Yes</option>\r\n\t\t\t\t<option value="false"  <%= def.download && def.download == "false" ? "selected" : "" %> >No</option>\r\n\t\t\t<% } %>\r\n\t\t</select>\r\n\t</div>\r\n\r\n\t<hr>\r\n\r\n\t<p class="spp-sb-header">4. Customize your social sharing message</p>\r\n\t<div class="spp-sb-section">\r\n\t\t<em>&emsp;For more information about these options, click <a href="http://support.smartpodcastplayer.com/article/143-customizing-social-sharing" target="_blank">here</a></em>\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-permalink" class="spp-sb-half">Permalink URL</label>\r\n\t\t<input type="text" id="spp-permalink" value="<%= sc.permalink ? sc.permalink : ""%>" class="spp-sb-half">\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<em>&emsp;Leave blank to use the link listed in the RSS feed, if present</em>\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-tweet-text" class="spp-sb-half">Custom message (Twitter only)</label>\r\n\t\t<input type="text" id="spp-tweet-text" value="<%= sc.tweet_text ? sc.tweet_text : ""%>" class="spp-sb-half">\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-hashtag" class="spp-sb-half">Hashtags (Twitter only)</label>\r\n\t\t<input type="text" id="spp-hashtag" value="<%= sc.hashtag ? sc.hashtag : ""%>" class="spp-sb-half">\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<em>&emsp;Include #, separate multiple hashtags with commas</em>\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-twitter-username" class="spp-sb-half">Username to include (Twitter only)</label>\r\n\t\t<input type="text" id="spp-twitter-username" value="<%= sc.twitter_username ? sc.twitter_username : ""%>" class="spp-sb-half">\r\n\t</div>\r\n\r\n\t<div class="spp-sb-buttons-section">\r\n\t\t<button id="spp-build-shortcode" class="button-primary spp-sb-button">Build shortcode</button>\r\n\t\t<button id="spp-cancel-shortcode" class="button-secondary spp-sb-button">Cancel</button>\r\n\t</div>\r\n</div>\r\n';});

/*!
 * jQuery blockUI plugin
 * Version 2.70.0-2014.11.23
 * Requires jQuery v1.7 or later
 *
 * Examples at: http://malsup.com/jquery/block/
 * Copyright (c) 2007-2013 M. Alsup
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 * Thanks to Amir-Hossein Sobhi for some excellent contributions!
 */
 
/*
 * Changes for Smart Podcast Player:
 * in function bind(b, el, opts), removed the condition !full so that it still
 *   binds events when we're only blocking an element, rather than the whole page
*/

;(function() {
/*jshint eqeqeq:false curly:false latedef:false */


	function setup($) {
		$.fn._fadeIn = $.fn.fadeIn;

		var noOp = $.noop || function() {};

		// this bit is to ensure we don't call setExpression when we shouldn't (with extra muscle to handle
		// confusing userAgent strings on Vista)
		var msie = /MSIE/.test(navigator.userAgent);
		var ie6  = /MSIE 6.0/.test(navigator.userAgent) && ! /MSIE 8.0/.test(navigator.userAgent);
		var mode = document.documentMode || 0;
		var setExpr = $.isFunction( document.createElement('div').style.setExpression );

		// global $ methods for blocking/unblocking the entire page
		$.blockUI   = function(opts) { install(window, opts); };
		$.unblockUI = function(opts) { remove(window, opts); };

		// convenience method for quick growl-like notifications  (http://www.google.com/search?q=growl)
		$.growlUI = function(title, message, timeout, onClose) {
			var $m = $('<div class="growlUI"></div>');
			if (title) $m.append('<h1>'+title+'</h1>');
			if (message) $m.append('<h2>'+message+'</h2>');
			if (timeout === undefined) timeout = 3000;

			// Added by konapun: Set timeout to 30 seconds if this growl is moused over, like normal toast notifications
			var callBlock = function(opts) {
				opts = opts || {};

				$.blockUI({
					message: $m,
					fadeIn : typeof opts.fadeIn  !== 'undefined' ? opts.fadeIn  : 700,
					fadeOut: typeof opts.fadeOut !== 'undefined' ? opts.fadeOut : 1000,
					timeout: typeof opts.timeout !== 'undefined' ? opts.timeout : timeout,
					centerY: false,
					showOverlay: false,
					onUnblock: onClose,
					css: $.blockUI.defaults.growlCSS
				});
			};

			callBlock();
			var nonmousedOpacity = $m.css('opacity');
			$m.mouseover(function() {
				callBlock({
					fadeIn: 0,
					timeout: 30000
				});

				var displayBlock = $('.blockMsg');
				displayBlock.stop(); // cancel fadeout if it has started
				displayBlock.fadeTo(300, 1); // make it easier to read the message by removing transparency
			}).mouseout(function() {
				$('.blockMsg').fadeOut(1000);
			});
			// End konapun additions
		};

		// plugin method for blocking element content
		$.fn.block = function(opts) {
			if ( this[0] === window ) {
				$.blockUI( opts );
				return this;
			}
			var fullOpts = $.extend({}, $.blockUI.defaults, opts || {});
			this.each(function() {
				var $el = $(this);
				if (fullOpts.ignoreIfBlocked && $el.data('blockUI.isBlocked'))
					return;
				$el.unblock({ fadeOut: 0 });
			});

			return this.each(function() {
				if ($.css(this,'position') == 'static') {
					this.style.position = 'relative';
					$(this).data('blockUI.static', true);
				}
				this.style.zoom = 1; // force 'hasLayout' in ie
				install(this, opts);
			});
		};

		// plugin method for unblocking element content
		$.fn.unblock = function(opts) {
			if ( this[0] === window ) {
				$.unblockUI( opts );
				return this;
			}
			return this.each(function() {
				remove(this, opts);
			});
		};

		$.blockUI.version = 2.70; // 2nd generation blocking at no extra cost!

		// override these in your code to change the default behavior and style
		$.blockUI.defaults = {
			// message displayed when blocking (use null for no message)
			message:  '<h1>Please wait...</h1>',

			title: null,		// title string; only used when theme == true
			draggable: true,	// only used when theme == true (requires jquery-ui.js to be loaded)

			theme: false, // set to true to use with jQuery UI themes

			// styles for the message when blocking; if you wish to disable
			// these and use an external stylesheet then do this in your code:
			// $.blockUI.defaults.css = {};
			css: {
				padding:	0,
				margin:		0,
				width:		'30%',
				top:		'40%',
				left:		'35%',
				textAlign:	'center',
				color:		'#000',
				border:		'3px solid #aaa',
				backgroundColor:'#fff',
				cursor:		'wait'
			},

			// minimal style set used when themes are used
			themedCSS: {
				width:	'30%',
				top:	'40%',
				left:	'35%'
			},

			// styles for the overlay
			overlayCSS:  {
				backgroundColor:	'#000',
				opacity:			0.6,
				cursor:				'wait'
			},

			// style to replace wait cursor before unblocking to correct issue
			// of lingering wait cursor
			cursorReset: 'default',

			// styles applied when using $.growlUI
			growlCSS: {
				width:		'350px',
				top:		'10px',
				left:		'',
				right:		'10px',
				border:		'none',
				padding:	'5px',
				opacity:	0.6,
				cursor:		'default',
				color:		'#fff',
				backgroundColor: '#000',
				'-webkit-border-radius':'10px',
				'-moz-border-radius':	'10px',
				'border-radius':		'10px'
			},

			// IE issues: 'about:blank' fails on HTTPS and javascript:false is s-l-o-w
			// (hat tip to Jorge H. N. de Vasconcelos)
			/*jshint scripturl:true */
			iframeSrc: /^https/i.test(window.location.href || '') ? 'javascript:false' : 'about:blank',

			// force usage of iframe in non-IE browsers (handy for blocking applets)
			forceIframe: false,

			// z-index for the blocking overlay
			baseZ: 1000,

			// set these to true to have the message automatically centered
			centerX: true, // <-- only effects element blocking (page block controlled via css above)
			centerY: true,

			// allow body element to be stetched in ie6; this makes blocking look better
			// on "short" pages.  disable if you wish to prevent changes to the body height
			allowBodyStretch: true,

			// enable if you want key and mouse events to be disabled for content that is blocked
			bindEvents: true,

			// be default blockUI will supress tab navigation from leaving blocking content
			// (if bindEvents is true)
			constrainTabKey: true,

			// fadeIn time in millis; set to 0 to disable fadeIn on block
			fadeIn:  200,

			// fadeOut time in millis; set to 0 to disable fadeOut on unblock
			fadeOut:  400,

			// time in millis to wait before auto-unblocking; set to 0 to disable auto-unblock
			timeout: 0,

			// disable if you don't want to show the overlay
			showOverlay: true,

			// if true, focus will be placed in the first available input field when
			// page blocking
			focusInput: true,

            // elements that can receive focus
            focusableElements: ':input:enabled:visible',

			// suppresses the use of overlay styles on FF/Linux (due to performance issues with opacity)
			// no longer needed in 2012
			// applyPlatformOpacityRules: true,

			// callback method invoked when fadeIn has completed and blocking message is visible
			onBlock: null,

			// callback method invoked when unblocking has completed; the callback is
			// passed the element that has been unblocked (which is the window object for page
			// blocks) and the options that were passed to the unblock call:
			//	onUnblock(element, options)
			onUnblock: null,

			// callback method invoked when the overlay area is clicked.
			// setting this will turn the cursor to a pointer, otherwise cursor defined in overlayCss will be used.
			onOverlayClick: null,

			// don't ask; if you really must know: http://groups.google.com/group/jquery-en/browse_thread/thread/36640a8730503595/2f6a79a77a78e493#2f6a79a77a78e493
			quirksmodeOffsetHack: 4,

			// class name of the message block
			blockMsgClass: 'blockMsg',

			// if it is already blocked, then ignore it (don't unblock and reblock)
			ignoreIfBlocked: false
		};

		// private data and functions follow...

		var pageBlock = null;
		var pageBlockEls = [];

		function install(el, opts) {
			var css, themedCSS;
			var full = (el == window);
			var msg = (opts && opts.message !== undefined ? opts.message : undefined);
			opts = $.extend({}, $.blockUI.defaults, opts || {});

			if (opts.ignoreIfBlocked && $(el).data('blockUI.isBlocked'))
				return;

			opts.overlayCSS = $.extend({}, $.blockUI.defaults.overlayCSS, opts.overlayCSS || {});
			css = $.extend({}, $.blockUI.defaults.css, opts.css || {});
			if (opts.onOverlayClick)
				opts.overlayCSS.cursor = 'pointer';

			themedCSS = $.extend({}, $.blockUI.defaults.themedCSS, opts.themedCSS || {});
			msg = msg === undefined ? opts.message : msg;

			// remove the current block (if there is one)
			if (full && pageBlock)
				remove(window, {fadeOut:0});

			// if an existing element is being used as the blocking content then we capture
			// its current place in the DOM (and current display style) so we can restore
			// it when we unblock
			if (msg && typeof msg != 'string' && (msg.parentNode || msg.jquery)) {
				var node = msg.jquery ? msg[0] : msg;
				var data = {};
				$(el).data('blockUI.history', data);
				data.el = node;
				data.parent = node.parentNode;
				data.display = node.style.display;
				data.position = node.style.position;
				if (data.parent)
					data.parent.removeChild(node);
			}

			$(el).data('blockUI.onUnblock', opts.onUnblock);
			var z = opts.baseZ;

			// blockUI uses 3 layers for blocking, for simplicity they are all used on every platform;
			// layer1 is the iframe layer which is used to supress bleed through of underlying content
			// layer2 is the overlay layer which has opacity and a wait cursor (by default)
			// layer3 is the message content that is displayed while blocking
			var lyr1, lyr2, lyr3, s;
			if (msie || opts.forceIframe)
				lyr1 = $('<iframe class="blockUI" style="z-index:'+ (z++) +';display:none;border:none;margin:0;padding:0;position:absolute;width:100%;height:100%;top:0;left:0" src="'+opts.iframeSrc+'"></iframe>');
			else
				lyr1 = $('<div class="blockUI" style="display:none"></div>');

			if (opts.theme)
				lyr2 = $('<div class="blockUI blockOverlay ui-widget-overlay" style="z-index:'+ (z++) +';display:none"></div>');
			else
				lyr2 = $('<div class="blockUI blockOverlay" style="z-index:'+ (z++) +';display:none;border:none;margin:0;padding:0;width:100%;height:100%;top:0;left:0"></div>');

			if (opts.theme && full) {
				s = '<div class="blockUI ' + opts.blockMsgClass + ' blockPage ui-dialog ui-widget ui-corner-all" style="z-index:'+(z+10)+';display:none;position:fixed">';
				if ( opts.title ) {
					s += '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">'+(opts.title || '&nbsp;')+'</div>';
				}
				s += '<div class="ui-widget-content ui-dialog-content"></div>';
				s += '</div>';
			}
			else if (opts.theme) {
				s = '<div class="blockUI ' + opts.blockMsgClass + ' blockElement ui-dialog ui-widget ui-corner-all" style="z-index:'+(z+10)+';display:none;position:absolute">';
				if ( opts.title ) {
					s += '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">'+(opts.title || '&nbsp;')+'</div>';
				}
				s += '<div class="ui-widget-content ui-dialog-content"></div>';
				s += '</div>';
			}
			else if (full) {
				s = '<div class="blockUI ' + opts.blockMsgClass + ' blockPage" style="z-index:'+(z+10)+';display:none;position:fixed"></div>';
			}
			else {
				s = '<div class="blockUI ' + opts.blockMsgClass + ' blockElement" style="z-index:'+(z+10)+';display:none;position:absolute"></div>';
			}
			lyr3 = $(s);

			// if we have a message, style it
			if (msg) {
				if (opts.theme) {
					lyr3.css(themedCSS);
					lyr3.addClass('ui-widget-content');
				}
				else
					lyr3.css(css);
			}

			// style the overlay
			if (!opts.theme /*&& (!opts.applyPlatformOpacityRules)*/)
				lyr2.css(opts.overlayCSS);
			lyr2.css('position', full ? 'fixed' : 'absolute');

			// make iframe layer transparent in IE
			if (msie || opts.forceIframe)
				lyr1.css('opacity',0.0);

			//$([lyr1[0],lyr2[0],lyr3[0]]).appendTo(full ? 'body' : el);
			var layers = [lyr1,lyr2,lyr3], $par = full ? $('body') : $(el);
			$.each(layers, function() {
				this.appendTo($par);
			});

			if (opts.theme && opts.draggable && $.fn.draggable) {
				lyr3.draggable({
					handle: '.ui-dialog-titlebar',
					cancel: 'li'
				});
			}

			// ie7 must use absolute positioning in quirks mode and to account for activex issues (when scrolling)
			var expr = setExpr && (!$.support.boxModel || $('object,embed', full ? null : el).length > 0);
			if (ie6 || expr) {
				// give body 100% height
				if (full && opts.allowBodyStretch && $.support.boxModel)
					$('html,body').css('height','100%');

				// fix ie6 issue when blocked element has a border width
				if ((ie6 || !$.support.boxModel) && !full) {
					var t = sz(el,'borderTopWidth'), l = sz(el,'borderLeftWidth');
					var fixT = t ? '(0 - '+t+')' : 0;
					var fixL = l ? '(0 - '+l+')' : 0;
				}

				// simulate fixed position
				$.each(layers, function(i,o) {
					var s = o[0].style;
					s.position = 'absolute';
					if (i < 2) {
						if (full)
							s.setExpression('height','Math.max(document.body.scrollHeight, document.body.offsetHeight) - (jQuery.support.boxModel?0:'+opts.quirksmodeOffsetHack+') + "px"');
						else
							s.setExpression('height','this.parentNode.offsetHeight + "px"');
						if (full)
							s.setExpression('width','jQuery.support.boxModel && document.documentElement.clientWidth || document.body.clientWidth + "px"');
						else
							s.setExpression('width','this.parentNode.offsetWidth + "px"');
						if (fixL) s.setExpression('left', fixL);
						if (fixT) s.setExpression('top', fixT);
					}
					else if (opts.centerY) {
						if (full) s.setExpression('top','(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (blah = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"');
						s.marginTop = 0;
					}
					else if (!opts.centerY && full) {
						var top = (opts.css && opts.css.top) ? parseInt(opts.css.top, 10) : 0;
						var expression = '((document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + '+top+') + "px"';
						s.setExpression('top',expression);
					}
				});
			}

			// show the message
			if (msg) {
				if (opts.theme)
					lyr3.find('.ui-widget-content').append(msg);
				else
					lyr3.append(msg);
				if (msg.jquery || msg.nodeType)
					$(msg).show();
			}

			if ((msie || opts.forceIframe) && opts.showOverlay)
				lyr1.show(); // opacity is zero
			if (opts.fadeIn) {
				var cb = opts.onBlock ? opts.onBlock : noOp;
				var cb1 = (opts.showOverlay && !msg) ? cb : noOp;
				var cb2 = msg ? cb : noOp;
				if (opts.showOverlay)
					lyr2._fadeIn(opts.fadeIn, cb1);
				if (msg)
					lyr3._fadeIn(opts.fadeIn, cb2);
			}
			else {
				if (opts.showOverlay)
					lyr2.show();
				if (msg)
					lyr3.show();
				if (opts.onBlock)
					opts.onBlock.bind(lyr3)();
			}

			// bind key and mouse events
			bind(1, el, opts);

			if (full) {
				pageBlock = lyr3[0];
				pageBlockEls = $(opts.focusableElements,pageBlock);
				if (opts.focusInput)
					setTimeout(focus, 20);
			}
			else
				center(lyr3[0], opts.centerX, opts.centerY);

			if (opts.timeout) {
				// auto-unblock
				var to = setTimeout(function() {
					if (full)
						$.unblockUI(opts);
					else
						$(el).unblock(opts);
				}, opts.timeout);
				$(el).data('blockUI.timeout', to);
			}
		}

		// remove the block
		function remove(el, opts) {
			var count;
			var full = (el == window);
			var $el = $(el);
			var data = $el.data('blockUI.history');
			var to = $el.data('blockUI.timeout');
			if (to) {
				clearTimeout(to);
				$el.removeData('blockUI.timeout');
			}
			opts = $.extend({}, $.blockUI.defaults, opts || {});
			bind(0, el, opts); // unbind events

			if (opts.onUnblock === null) {
				opts.onUnblock = $el.data('blockUI.onUnblock');
				$el.removeData('blockUI.onUnblock');
			}

			var els;
			if (full) // crazy selector to handle odd field errors in ie6/7
				els = $('body').children().filter('.blockUI').add('body > .blockUI');
			else
				els = $el.find('>.blockUI');

			// fix cursor issue
			if ( opts.cursorReset ) {
				if ( els.length > 1 )
					els[1].style.cursor = opts.cursorReset;
				if ( els.length > 2 )
					els[2].style.cursor = opts.cursorReset;
			}

			if (full)
				pageBlock = pageBlockEls = null;

			if (opts.fadeOut) {
				count = els.length;
				els.stop().fadeOut(opts.fadeOut, function() {
					if ( --count === 0)
						reset(els,data,opts,el);
				});
			}
			else
				reset(els, data, opts, el);
		}

		// move blocking element back into the DOM where it started
		function reset(els,data,opts,el) {
			var $el = $(el);
			if ( $el.data('blockUI.isBlocked') )
				return;

			els.each(function(i,o) {
				// remove via DOM calls so we don't lose event handlers
				if (this.parentNode)
					this.parentNode.removeChild(this);
			});

			if (data && data.el) {
				data.el.style.display = data.display;
				data.el.style.position = data.position;
				data.el.style.cursor = 'default'; // #59
				if (data.parent)
					data.parent.appendChild(data.el);
				$el.removeData('blockUI.history');
			}

			if ($el.data('blockUI.static')) {
				$el.css('position', 'static'); // #22
			}

			if (typeof opts.onUnblock == 'function')
				opts.onUnblock(el,opts);

			// fix issue in Safari 6 where block artifacts remain until reflow
			var body = $(document.body), w = body.width(), cssW = body[0].style.width;
			body.width(w-1).width(w);
			body[0].style.width = cssW;
		}

		// bind/unbind the handler
		function bind(b, el, opts) {
			var full = el == window, $el = $(el);

			// don't bother unbinding if there is nothing to unbind
			if (!b && (full && !pageBlock || !full && !$el.data('blockUI.isBlocked')))
				return;

			$el.data('blockUI.isBlocked', b);

			// don't bind events when overlay is not in use or if bindEvents is false
			if (!opts.bindEvents || (b && !opts.showOverlay))
				return;

			// bind anchors and inputs for mouse and key events
			var events = 'mousedown mouseup keydown keypress keyup touchstart touchend touchmove';
			if (b)
				$(document).bind(events, opts, handler);
			else
				$(document).unbind(events, handler);

		// former impl...
		//		var $e = $('a,:input');
		//		b ? $e.bind(events, opts, handler) : $e.unbind(events, handler);
		}

		// event handler to suppress keyboard/mouse events when blocking
		function handler(e) {
			// allow tab navigation (conditionally)
			if (e.type === 'keydown' && e.keyCode && e.keyCode == 9) {
				if (pageBlock && e.data.constrainTabKey) {
					var els = pageBlockEls;
					var fwd = !e.shiftKey && e.target === els[els.length-1];
					var back = e.shiftKey && e.target === els[0];
					if (fwd || back) {
						setTimeout(function(){focus(back);},10);
						return false;
					}
				}
			}
			var opts = e.data;
			var target = $(e.target);
			if (target.hasClass('blockOverlay') && opts.onOverlayClick)
				opts.onOverlayClick(e);

			// allow events within the message content
			if (target.parents('div.' + opts.blockMsgClass).length > 0)
				return true;

			// allow events for content that is not being blocked
			return target.parents().children().filter('div.blockUI').length === 0;
		}

		function focus(back) {
			if (!pageBlockEls)
				return;
			var e = pageBlockEls[back===true ? pageBlockEls.length-1 : 0];
			if (e)
				e.focus();
		}

		function center(el, x, y) {
			var p = el.parentNode, s = el.style;
			var l = ((p.offsetWidth - el.offsetWidth)/2) - sz(p,'borderLeftWidth');
			var t = ((p.offsetHeight - el.offsetHeight)/2) - sz(p,'borderTopWidth');
			if (x) s.left = l > 0 ? (l+'px') : '0';
			if (y) s.top  = t > 0 ? (t+'px') : '0';
		}

		function sz(el, p) {
			return parseInt($.css(el,p),10)||0;
		}

	}


	/*global define:true */
	if (typeof define === 'function' && define.amd && define.amd.jQuery) {
		define('blockUI',['jquery'], setup);
	} else {
		setup(jQuery);
	}

})();


define('text!../templates/shortcode-builder-stp-template.html',[],function () { return '<% var def = smart_podcast_player_user_settings; %>\r\n\r\n<div class="spp-sb">\r\n\t<span class="spp-sb-title">Smart Track Player Shortcode</span>\r\n\t<p><em>For displaying individual podcast episodes.</em></p>\r\n\t<p><em>Enter default values in Settings —&gt; Smart Podcast Player.</em></p>\r\n\r\n\t<hr>\r\n\r\n\t<p class="spp-sb-header">1. Choose the episode to display</p>\r\n\t<div class="spp-sb-section">\r\n\t\t<select id="spp-latest-or-no" class="spp-sb-full">\r\n\t\t\t<option value="normal" <%= isLatest ? "" : "selected" %>>Play a specific episode of your podcast</option>\r\n\t\t\t<option value="latest" <%= isLatest ? "selected" : "" %>>Play the most recent episode in your feed</option>\r\n\t\t</select>\r\n\t</div>\r\n\t<div class="spp-sb-section spp-file-helper-text">\r\n\t\tUse this option for episode posts, and anytime you don\'t want the episode to change when your feed is updated.\r\n\t\tEnter the file URL below.\r\n\t</div>\r\n\t<div class="spp-sb-section spp-feed-helper-text">\r\n\t\tUse this option to always display the latest episode from your feed.\r\n\t\tWhen your feed is updated, this player will automatically update as well!\r\n\t\tEnter the feed URL below.\r\n\t</div>\r\n\t<p></p>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-url" class="spp-sb-half">URL</label>\r\n\t\t<input type="text" id="spp-url" value="<%= sc.url ? sc.url : isLatest && def.url ? def.url : "" %>" class="spp-sb-half">\r\n\t</div>\r\n\r\n\t<hr>\r\n\r\n\t<p class="spp-sb-header">2. Customize the appearance</p>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-color" class="spp-sb-half">Highlight color (Hex) #</label>\r\n\t\t<input type="text" id="spp-color" value="<%= sc.color ? sc.color : def.bg_color ? def.bg_color : "" %>" class="spp-sb-half">\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-bg-type" class="spp-sb-half">Background type</label>\r\n\t\t<select id="spp-bg-type" class="spp-sb-half">\r\n\t\t\t<option value="default"      <%= bgDef ? "selected" : "" %>>Default</option>\r\n\t\t\t<option value="blurred_logo" <%= bgBlr ? "selected" : "" %>>Blurred logo</option>\r\n\t\t\t<option value="color"        <%= bgCol ? "selected" : "" %>>Color (select below)</option>\r\n\t\t</select>\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-bg-color" class="spp-sb-half">Background color (hex) #</label>\r\n\t\t<% var bgColor = bgCol && sc.background ? sc.background : def.stp_background_color; %>\r\n\t\t<input type="text" id="spp-bg-color" value="<%= bgColor %>" class="spp-sb-half">\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-image-url" class="spp-sb-half">Image URL</label>\r\n\t\t<input type="text" id="spp-image-url" value="<%= sc.image ? sc.image : def.stp_image %>" class="spp-sb-half">\r\n\t</div>\r\n\r\n\t<hr>\r\n\r\n\t<p class="spp-sb-header">3. Customize the track information</p>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-artist" class="spp-sb-half">Artist</label>\r\n\t\t<input type="text" id="spp-artist" value="<%= sc.artist ? sc.artist : def.artist_name %>" class="spp-sb-half">\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-title" class="spp-sb-half">Title</label>\r\n\t\t<input type="text" id="spp-title" value="<%= sc.title ? sc.title : "" %>" class="spp-sb-half">\r\n\t</div>\r\n\r\n\t<hr>\r\n\r\n\t<p class="spp-sb-header">4. Customize the buttons</p>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-social" class="spp-sb-half">Display the social sharing buttons</label>\r\n\t\t<select id="spp-social" class="spp-sb-half">\r\n\t\t\t<% if (sc.social) { %>\r\n\t\t\t\t<option value="yes" <%= sc.social == "true" ? "selected" : "" %>>Yes</option>\r\n\t\t\t\t<option value="no"  <%= sc.social == "true" ? "" : "selected" %>>No</option>\r\n\t\t\t<% } else { %>\r\n\t\t\t\t<option value="yes">Yes</option>\r\n\t\t\t\t<option value="no">No</option>\r\n\t\t\t<% } %>\r\n\t\t</select>\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<span class="spp-sb-half">Social sharing buttons</span>\r\n\t\t<div class="spp-sb-half">\r\n\t\t\t<% var social_customized = sc.social \r\n\t\t\t\t\t|| sc.social_twitter\r\n\t\t\t\t\t|| sc.social_facebook\r\n\t\t\t\t\t|| sc.social_gplus\r\n\t\t\t\t\t|| sc.social_linkedin\r\n\t\t\t\t\t|| sc.social_pinterest\r\n\t\t\t\t\t|| sc.social_email\r\n\t\t\t\t\t%>\r\n\t\t\t<% if (social_customized) { %>\r\n\t\t\t\t<table><tr><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-twitter" <%= sc.social_twitter && sc.social_twitter == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-twitter">Twitter</label>\r\n\t\t\t\t\t\t</td><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-facebook" <%= sc.social_facebook && sc.social_facebook == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-facebook">Facebook</label>\r\n\t\t\t\t\t</td></tr><tr><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-gplus" <%= sc.social_gplus && sc.social_gplus == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-gplus">Google+</label>\r\n\t\t\t\t\t\t</td><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-linkedin" <%= sc.social_linkedin && sc.social_linkedin == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-linkedin">LinkedIn</label>\r\n\t\t\t\t\t</td></tr><tr><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-pinterest" <%= sc.social_pinterest && sc.social_pinterest == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-pinterest">Pinterest</label>\r\n\t\t\t\t\t\t</td><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-email"  <%= sc.social_email && sc.social_email == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-email">Email</label>\r\n\t\t\t\t</td></tr></table>\r\n\t\t\t<% } else { %>\r\n\t\t\t\t<table><tr><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-twitter" <%= sc.social_twitter && sc.social_twitter == "false" ? "" : "checked" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-twitter">Twitter</label>\r\n\t\t\t\t\t\t</td><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-facebook" <%= sc.social_facebook && sc.social_facebook == "false" ? "" : "checked" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-facebook">Facebook</label>\r\n\t\t\t\t\t</td></tr><tr><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-gplus" <%= sc.social_gplus && sc.social_gplus == "false" ? "" : "checked" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-gplus">Google+</label>\r\n\t\t\t\t\t\t</td><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-linkedin" <%= sc.social_linkedin && sc.social_linkedin == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-linkedin">LinkedIn</label>\r\n\t\t\t\t\t</td></tr><tr><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-pinterest" <%= sc.social_pinterest && sc.social_pinterest == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-pinterest">Pinterest</label>\r\n\t\t\t\t\t\t</td><td>\r\n\t\t\t\t\t\t\t<input type="checkbox" id="spp-social-email"  <%= sc.social_email && sc.social_email == "true" ? "checked" : "" %>>\r\n\t\t\t\t\t\t\t<label for="spp-social-email">Email</label>\r\n\t\t\t\t</td></tr></table>\r\n\t\t\t<% } %>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-download" class="spp-sb-half">Display download button</label>\r\n\t\t<select id="spp-download" class="spp-sb-half">\r\n\t\t\t<% if (sc.download) { %>\r\n\t\t\t\t<option value="true"  <%= sc.download && sc.download == "false" ? "" : "selected" %> >Yes</option>\r\n\t\t\t\t<option value="false" <%= sc.download && sc.download == "false" ? "selected" : "" %> >No</option>\r\n\t\t\t<% } else { %>\r\n\t\t\t\t<option value="true" <%= def.download && def.download == "false" ? "" : "selected" %> >Yes</option>\r\n\t\t\t\t<option value="false"  <%= def.download && def.download == "false" ? "selected" : "" %> >No</option>\r\n\t\t\t<% } %>\r\n\t\t</select>\r\n\t</div>\r\n\r\n\t<hr>\r\n\r\n\t<p class="spp-sb-header">5. Customize your social sharing message</p>\r\n\t<div class="spp-sb-section">\r\n\t\t<em>&emsp;For more information about these options, click <a href="http://support.smartpodcastplayer.com/article/143-customizing-social-sharing" target="_blank">here</a></em>\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-permalink" class="spp-sb-half">Permalink URL</label>\r\n\t\t<input type="text" id="spp-permalink" value="<%= sc.permalink ? sc.permalink : ""%>" class="spp-sb-half">\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<em>&emsp;Leave blank to use the link listed in the RSS feed, if present</em>\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-tweet-text" class="spp-sb-half">Custom message (Twitter only)</label>\r\n\t\t<input type="text" id="spp-tweet-text" value="<%= sc.tweet_text ? sc.tweet_text : ""%>" class="spp-sb-half">\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-hashtag" class="spp-sb-half">Hashtags (Twitter only)</label>\r\n\t\t<input type="text" id="spp-hashtag" value="<%= sc.hashtag ? sc.hashtag : ""%>" class="spp-sb-half">\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<em>&emsp;Include #, separate multiple hashtags with commas</em>\r\n\t</div>\r\n\t<div class="spp-sb-section">\r\n\t\t<label for="spp-twitter-username" class="spp-sb-half">Username to include (Twitter only)</label>\r\n\t\t<input type="text" id="spp-twitter-username" value="<%= sc.twitter_username ? sc.twitter_username : ""%>" class="spp-sb-half">\r\n\t</div>\r\n\r\n\t<div class="spp-sb-buttons-section">\r\n\t\t<button id="spp-build-shortcode" class="button-primary spp-sb-button">Build shortcode</button>\r\n\t\t<button id="spp-cancel-shortcode" class="button-secondary spp-sb-button">Cancel</button>\r\n\t</div>\r\n</div>\r\n';});


if ( typeof jQuery === 'function' ) {
	define( 'jquery', function ( $ ) { return jQuery; } );
}

if (typeof _ === 'function') {
	define( 'underscore', function () { return _; });
}

const sppIcon = wp.element.createElement('svg', {},
	wp.element.createElement('path', { fill: "rgb(5,163,74)", stroke: "none",
	d: "m11.7726,15.70905c1.74951,0 3.08418,-1.616 3.08418,-4.66591c0,-3.02715 -1.33468,-4.64315 -3.08418,-4.64315c-0.72145,0 -1.40682,0.31865 -1.98398,1.16079l0,-0.95594l-2.59721,0l0,12.24516l2.61524,0l0,-4.30174c0.57716,0.84214 1.24449,1.16079 1.96594,1.16079zm-0.90181,-2.93611c-0.34269,0 -0.8477,-0.22761 -1.08217,-0.61453l0,-2.25329c0.25251,-0.38693 0.73948,-0.61453 1.08217,-0.61453c0.70341,0 1.2986,0.61453 1.2986,1.7298c0.01804,1.13803 -0.59519,1.75256 -1.2986,1.75256z",}),
	wp.element.createElement('path', { fill: "rgb(5,163,74)", stroke: "none",
	d: "m19.36582,15.70905c1.74951,0 3.08418,-1.616 3.08418,-4.66591c0,-3.02715 -1.33468,-4.64315 -3.08418,-4.64315c-0.72145,0 -1.40682,0.31865 -1.98398,1.16079l0,-0.95594l-2.59721,0l0,12.24516l2.61524,0l0,-4.30174c0.57716,0.84214 1.24449,1.16079 1.96594,1.16079zm-0.90181,-2.93611c-0.34269,0 -0.8477,-0.22761 -1.08217,-0.61453l0,-2.25329c0.25251,-0.38693 0.73948,-0.61453 1.08217,-0.61453c0.70341,0 1.2986,0.61453 1.2986,1.7298c0.01804,1.13803 -0.59519,1.75256 -1.2986,1.75256z",}),
	wp.element.createElement('path', { fill: "rgb(5,163,74)", stroke: "none",
	d: "m3.94491,15.70905c2.07416,0 3.31865,-1.27459 3.31865,-3.04991c0,-3.6872 -3.98599,-2.77678 -3.98599,-3.50512c0,-0.22761 0.27054,-0.38693 0.6493,-0.38693c0.81163,0 1.62325,0.45521 2.05612,0.91042l0.95592,-2.13949c-0.81163,-0.68282 -1.85772,-1.13803 -3.03007,-1.13803c-2.02005,0 -3.12025,1.38839 -3.12025,2.98163c0,3.70996 3.98599,2.61746 3.98599,3.4596c0,0.22761 -0.16233,0.38693 -0.70341,0.38693c-0.77555,0 -1.98398,-0.56901 -2.52506,-1.11527l-1.0461,2.23053c0.75752,0.79662 2.1463,1.36563 3.44491,1.36563z",
	}));

// For now it's the same as the SPP icon, but black
const stpIcon = wp.element.createElement('svg', {},
	wp.element.createElement('path', { fill: "rgb(0,0,0)", stroke: "none",
	d: "m11.7726,15.70905c1.74951,0 3.08418,-1.616 3.08418,-4.66591c0,-3.02715 -1.33468,-4.64315 -3.08418,-4.64315c-0.72145,0 -1.40682,0.31865 -1.98398,1.16079l0,-0.95594l-2.59721,0l0,12.24516l2.61524,0l0,-4.30174c0.57716,0.84214 1.24449,1.16079 1.96594,1.16079zm-0.90181,-2.93611c-0.34269,0 -0.8477,-0.22761 -1.08217,-0.61453l0,-2.25329c0.25251,-0.38693 0.73948,-0.61453 1.08217,-0.61453c0.70341,0 1.2986,0.61453 1.2986,1.7298c0.01804,1.13803 -0.59519,1.75256 -1.2986,1.75256z",}),
	wp.element.createElement('path', { fill: "rgb(0,0,0)", stroke: "none",
	d: "m19.36582,15.70905c1.74951,0 3.08418,-1.616 3.08418,-4.66591c0,-3.02715 -1.33468,-4.64315 -3.08418,-4.64315c-0.72145,0 -1.40682,0.31865 -1.98398,1.16079l0,-0.95594l-2.59721,0l0,12.24516l2.61524,0l0,-4.30174c0.57716,0.84214 1.24449,1.16079 1.96594,1.16079zm-0.90181,-2.93611c-0.34269,0 -0.8477,-0.22761 -1.08217,-0.61453l0,-2.25329c0.25251,-0.38693 0.73948,-0.61453 1.08217,-0.61453c0.70341,0 1.2986,0.61453 1.2986,1.7298c0.01804,1.13803 -0.59519,1.75256 -1.2986,1.75256z",}),
	wp.element.createElement('path', { fill: "rgb(0,0,0)", stroke: "none",
	d: "m3.94491,15.70905c2.07416,0 3.31865,-1.27459 3.31865,-3.04991c0,-3.6872 -3.98599,-2.77678 -3.98599,-3.50512c0,-0.22761 0.27054,-0.38693 0.6493,-0.38693c0.81163,0 1.62325,0.45521 2.05612,0.91042l0.95592,-2.13949c-0.81163,-0.68282 -1.85772,-1.13803 -3.03007,-1.13803c-2.02005,0 -3.12025,1.38839 -3.12025,2.98163c0,3.70996 3.98599,2.61746 3.98599,3.4596c0,0.22761 -0.16233,0.38693 -0.70341,0.38693c-0.77555,0 -1.98398,-0.56901 -2.52506,-1.11527l-1.0461,2.23053c0.75752,0.79662 2.1463,1.36563 3.44491,1.36563z",
	}));

wp.blocks.registerBlockType( 'smart-podcast-player/spp', {
    title: 'Smart Podcast Player',
	description: 'Build and edit the shortcode for the Smart Podcast Player (full player). For help, go to support.smartpodcastplayer.com.',
    icon: sppIcon,
    category: 'widgets',
	
	attributes: {
		text: {
			type: 'string',
			source: 'text',
			default: '[smart_podcast_player]',
		},
	},

	edit: function(props) {

		function onChangeShortcode(newShortcode) {
			props.setAttributes({text: newShortcode});
		}
		
		function buildShortcode() {
			
			var def = smart_podcast_player_user_settings;
			var data = {};
			data.url               = document.getElementById('spp-url').value;
			data.style             = document.getElementById('spp-style').value;
			data.show_name         = document.getElementById('spp-show-name').value;
			data.color             = document.getElementById('spp-color').value;
			data.social            = document.getElementById('spp-social').value;
			data.social_twitter    = document.getElementById('spp-social-twitter').checked;
			data.social_facebook   = document.getElementById('spp-social-facebook').checked;
			data.social_gplus      = document.getElementById('spp-social-gplus').checked;
			data.social_linkedin   = document.getElementById('spp-social-linkedin').checked;
			data.social_pinterest  = document.getElementById('spp-social-pinterest').checked;
			data.social_email      = document.getElementById('spp-social-email').checked;
			data.download          = document.getElementById('spp-download').value;
			data.permalink         = document.getElementById('spp-permalink').value;
			data.tweet_text        = document.getElementById('spp-tweet-text').value;
			data.hashtag           = document.getElementById('spp-hashtag').value;
			data.twitter_username  = document.getElementById('spp-twitter-username').value;
			
			data.show_name  = data.show_name.replace('"', '&quot;');
			data.tweet_text = data.tweet_text.replace('"', '&quot;');
			data.hashtag    = data.hashtag.replace('"', '&quot;');
			
			var shortcode = '[smart_podcast_player';

			if( data.url && ( !def.url || def.url != data.url ) )
				shortcode += ' url="' + data.url + '" ';

			if( def.style ) {
				if( data.style != def.style )
					shortcode += ' style="' + data.style + '" ';
			} else {
				if( data.style != 'light' )
					shortcode += ' style="' + data.style + '" ';
			}

			if( data.show_name && ( !def.show_name || def.show_name != data.show_name ) )
				shortcode += ' show_name="' + data.show_name + '" ';

			if( data.color && ( !def.bg_color || def.bg_color != data.color ) )
				shortcode += ' color="' + data.color + '" ';

			if( data.social != 'yes' ) {
				shortcode += ' social="false" ';
			} else {
				// Default: Twitter, Facebook, G+, email are true, others false
				// If user selected default options, nothing is needed here;
				//   otherwise, all checked ones are needed
				if( data.social_twitter
						&& data.social_facebook
						&& data.social_gplus
						&& data.social_email
						&& ! data.social_linkedin
						&& ! data.social_pinterest ) {
					// No shortcode atts necessary here
				} else {
					if( data.social_twitter )
						shortcode += ' social_twitter="true" ';
					if( data.social_facebook )
						shortcode += ' social_facebook="true" ';
					if( data.social_gplus )
						shortcode += ' social_gplus="true" ';
					if( data.social_linkedin )
						shortcode += ' social_linkedin="true" ';
					if( data.social_pinterest )
						shortcode += ' social_pinterest="true" ';
					if( data.social_email )
						shortcode += ' social_email="true" ';
				}
			}

			if( def.download ) {
				if( data.download != def.download )
					shortcode += ' download="' + data.download + '" ';
			} else {
				if( data.download != 'true' )
					shortcode += ' download="' + data.download + '" ';
			}
			
			if( data.permalink )
				shortcode += ' permalink="' + data.permalink + '" ';
			if( data.tweet_text )
				shortcode += ' tweet_text="' + data.tweet_text + '" ';
			if( data.hashtag )
				shortcode += ' hashtag="' + data.hashtag.replace('#','') + '" ';
			if( data.twitter_username )
				shortcode += ' twitter_username="' + data.twitter_username.replace('@','') + '" ';
			
			// Any shortcode key/value pairs not in the builder get put back in
			var oldSc = wp.shortcode.next('smart_podcast_player', props.attributes.text)
			var oldAttrs = oldSc ? oldSc.shortcode.attrs.named : {}
			for (var key in oldAttrs) {
				if (
					key != "url" &&
					key != "style" &&
					key != "show_name" &&
					key != "color" &&
					key != "social" &&
					key != "social_twitter" &&
					key != "social_facebook" &&
					key != "social_gplus" &&
					key != "social_linkedin" &&
					key != "social_pinterest" &&
					key != "social_email" &&
					key != "download" &&
					key != "permalink" &&
					key != "tweet_text" &&
					key != "hashtag" &&
					key != "twitter_username"
				)
					shortcode += ' ' + key + '="' + oldAttrs[key] + '" ';
			}

			shortcode += ']';
			
			props.setAttributes({text: shortcode});
			$.unblockUI();
		}
			
		function editButtonClick() {
			require(["text!../templates/shortcode-builder-spp-template.html", 'blockUI'], function(sppBuilder) {
				var sc = wp.shortcode.next('smart_podcast_player', props.attributes.text);
				if (!sc) {
					props.setAttributes({text: '[smart_podcast_player]'});
					sc = wp.shortcode.next('smart_podcast_player', '[smart_podcast_player]')
				}
				var msg = _.template(sppBuilder)({sc: sc.shortcode.attrs.named});
				$.blockUI({
					message: msg,
					blockMsgClass: "spp-shortcode-builder",
					css: {
						top: '10%',
						cursor: 'default',
						height: '80%',
						overflow: 'auto',
					},
					centerX: false,
					centerY: false,
					baseZ: 200000,
				});
				$('#spp-build-shortcode').click(buildShortcode);
				$('#spp-cancel-shortcode').click(function() {$.unblockUI();});
			});
		}
		
		const inspectorControls = wp.element.createElement(
				wp.editor.InspectorControls,
				{},
				wp.element.createElement(
					wp.components.PanelBody,
					{title: 'Shortcode Builder',},
					wp.element.createElement(wp.components.Button, {
						isDefault: true,
						onClick: editButtonClick,
						},
						'Edit shortcode...')
				)
			);
		
        return [
			inspectorControls,
			wp.element.createElement('div', {}, '', [
				wp.element.createElement('p', {}, 'Shortcode:'),
				wp.element.createElement(wp.editor.PlainText,
						{
							value: props.attributes.text,
							onChange: onChangeShortcode,
							className: 'input-control',
						}),
				])
			];
	},

	save: function(props) {
        return wp.element.createElement(wp.element.RawHTML, null, props.attributes.text);
    },
} );

wp.blocks.registerBlockType( 'smart-podcast-player/stp', {
    title: 'Smart Track Player',
	description: 'Build and edit the shortcode for the Smart Track Player (individual player). For help, go to support.smartpodcastplayer.com',
    icon: stpIcon,
    category: 'widgets',
	
	attributes: {
		text: {
			type: 'string',
			source: 'text',
			default: '[smart_track_player]',
		},
	},

	edit: function(props) {

		function onChangeShortcode(newShortcode) {
			props.setAttributes({text: newShortcode});
		}
		
		function buildShortcode() {
			
			var def = smart_podcast_player_user_settings;
			var data = {};
			data.isLatest          = document.getElementById('spp-latest-or-no').value == "latest";
			data.url               = document.getElementById('spp-url').value;
			data.color             = document.getElementById('spp-color').value;
			data.bg_type           = document.getElementById('spp-bg-type').value;
			data.bg_color          = document.getElementById('spp-bg-color').value;
			data.image_url         = document.getElementById('spp-image-url').value;
			data.artist            = document.getElementById('spp-artist').value;
			data.title             = document.getElementById('spp-title').value;
			data.social            = document.getElementById('spp-social').value;
			data.social_twitter    = document.getElementById('spp-social-twitter').checked;
			data.social_facebook   = document.getElementById('spp-social-facebook').checked;
			data.social_gplus      = document.getElementById('spp-social-gplus').checked;
			data.social_linkedin   = document.getElementById('spp-social-linkedin').checked;
			data.social_pinterest  = document.getElementById('spp-social-pinterest').checked;
			data.social_email      = document.getElementById('spp-social-email').checked;
			data.download          = document.getElementById('spp-download').value;
			data.permalink         = document.getElementById('spp-permalink').value;
			data.tweet_text        = document.getElementById('spp-tweet-text').value;
			data.hashtag           = document.getElementById('spp-hashtag').value;
			data.twitter_username  = document.getElementById('spp-twitter-username').value;
			
			data.artist     = data.artist.replace('"', '&quot;');
			data.title      = data.title.replace('"', '&quot;');
			data.tweet_text = data.tweet_text.replace('"', '&quot;');
			data.hashtag    = data.hashtag.replace('"', '&quot;');
			
			var shortcode = '[smart_track_player';
			if( data.isLatest)
				shortcode += '_latest';

			if( data.url && ( !data.isLatest || !def.url || def.url != data.url ) )
				shortcode += ' url="' + data.url + '"';

			if( data.color && ( !def.bg_color || def.bg_color != data.color ) )
				shortcode += ' color="' + data.color + '"';
			
			if( data.bg_type !== def.stp_background ||
					data.bg_type == "color" && data.bg_color !== def.stp_background_color ) {
				if (data.bg_type !== "color") {
					shortcode += ' background="' + data.bg_type + '"';
				} else {
					shortcode += ' background="' + data.bg_color + '"';
				}
			}

			if( data.image_url && data.image_url !== def.stp_image )
				shortcode += ' image="' + data.image_url + '"';

			if( data.artist && data.artist !== def.artist_name )
				shortcode += ' artist="' + data.artist + '" ';

			if( data.title )
				shortcode += ' title="' + data.title + '" ';

			if( data.social != 'yes' ) {
				shortcode += ' social="false" ';
			} else {
				// Default: Twitter, Facebook, G+ are true, others false
				// If user selected default options, nothing is needed here;
				//   otherwise, all checked ones are needed
				if( data.social_twitter
						&& data.social_facebook
						&& data.social_gplus
						&& ! data.social_email
						&& ! data.social_linkedin
						&& ! data.social_pinterest ) {
					// No shortcode atts necessary here
				} else {
					if( data.social_twitter )
						shortcode += ' social_twitter="true" ';
					if( data.social_facebook )
						shortcode += ' social_facebook="true" ';
					if( data.social_gplus )
						shortcode += ' social_gplus="true" ';
					if( data.social_linkedin )
						shortcode += ' social_linkedin="true" ';
					if( data.social_pinterest )
						shortcode += ' social_pinterest="true" ';
					if( data.social_email )
						shortcode += ' social_email="true" ';
				}
			}

			if( def.download ) {
				if( data.download != def.download )
					shortcode += ' download="' + data.download + '" ';
			} else {
				if( data.download != 'true' )
					shortcode += ' download="' + data.download + '" ';
			}
			
			if( data.permalink )
				shortcode += ' permalink="' + data.permalink + '" ';
			if( data.tweet_text )
				shortcode += ' tweet_text="' + data.tweet_text + '" ';
			if( data.hashtag )
				shortcode += ' hashtag="' + data.hashtag.replace('#','') + '" ';
			if( data.twitter_username )
				shortcode += ' twitter_username="' + data.twitter_username.replace('@','') + '" ';
			
			// Any shortcode key/value pairs not in the builder get put back in
			var oldSc = wp.shortcode.next('smart_track_player', props.attributes.text) ||
					    wp.shortcode.next('smart_track_player_latest', props.attributes.text);
			var oldAttrs = oldSc ? oldSc.shortcode.attrs.named : {};
			for (var key in oldAttrs) {
				if (
					key != "url" &&
					key != "color" &&
					key != "bg_type" &&
					key != "bg_color" &&
					key != "image_url" &&
					key != "artist" &&
					key != "title" &&
					key != "social" &&
					key != "social_twitter" &&
					key != "social_facebook" &&
					key != "social_gplus" &&
					key != "social_linkedin" &&
					key != "social_pinterest" &&
					key != "social_email" &&
					key != "download" &&
					key != "permalink" &&
					key != "tweet_text" &&
					key != "hashtag" &&
					key != "twitter_username"
				)
					shortcode += ' ' + key + '="' + oldAttrs[key] + '" ';
			}

			shortcode += ']';
			
			props.setAttributes({text: shortcode});
			$.unblockUI();
		}
		
		function selectLatestOrNo(e) {
			var sc = wp.shortcode.next('smart_track_player', props.attributes.text) ||
					 wp.shortcode.next('smart_track_player_latest', props.attributes.text);
			if (e.target.value === "normal") {
				$('.spp-file-helper-text').show();
				$('.spp-feed-helper-text').hide();
				if (!sc.shortcode.get('url'))
					$('#spp-url').val("");
			} else {
				$('.spp-file-helper-text').hide();
				$('.spp-feed-helper-text').show();
				if (!sc.shortcode.get('url') && smart_podcast_player_user_settings.url)
					$('#spp-url').val(smart_podcast_player_user_settings.url);
			}
		}
		
		function selectBackgroundType(e) {
			if (e.target.value === "color") {
				$('#spp-bg-color').prop('disabled', false);
				$('#spp-bg-color').val(smart_podcast_player_user_settings.stp_background_color);
			} else {
				$('#spp-bg-color').prop('disabled', true);
			}
		}
			
		function editButtonClick() {
			require(["text!../templates/shortcode-builder-stp-template.html", 'blockUI'], function(stpBuilder) {
				var sc = wp.shortcode.next('smart_track_player', props.attributes.text) ||
						 wp.shortcode.next('smart_track_player_latest', props.attributes.text);
				if (!sc) {
					props.attributes.text = '[smart_track_player]';
					sc = wp.shortcode.next('smart_track_player', '[smart_track_player]')
				}
				
				var def = smart_podcast_player_user_settings;
				var scbg = sc.shortcode.get("background");
				var bgDef = scbg == "default" || !scbg && def.stp_background == "default";
				var bgBlr = scbg == "blurred_logo" || !scbg && def.stp_background == "blurred_logo";
				var bgCol = !bgDef && !bgBlr;
				
				var msg = _.template(stpBuilder)({
					isLatest: sc.shortcode.tag == "smart_track_player_latest",
					sc: sc.shortcode.attrs.named,
					bgDef: bgDef,
					bgBlr: bgBlr,
					bgCol: bgCol,
				});
				$.blockUI({
					message: msg,
					blockMsgClass: "spp-shortcode-builder",
					css: {
						top: '10%',
						cursor: 'default',
						height: '80%',
						overflow: 'auto',
					},
					centerX: false,
					centerY: false,
					baseZ: 200000,
				});
				$('#spp-latest-or-no').change(selectLatestOrNo);
				$('#spp-bg-type').change(selectBackgroundType);
				selectBackgroundType({target:{value:bgCol ? "color" : "not color"}});
				$('#spp-build-shortcode').click(buildShortcode);
				$('#spp-cancel-shortcode').click(function() {$.unblockUI();});
			});
		}
		
		const inspectorControls = wp.element.createElement(
				wp.editor.InspectorControls,
				{},
				wp.element.createElement(
					wp.components.PanelBody,
					{title: 'Shortcode Builder',},
					wp.element.createElement(wp.components.Button, {
						isDefault: true,
						onClick: editButtonClick,
						},
						'Edit shortcode...')
				)
			);
		
        return [
			inspectorControls,
			wp.element.createElement('div', {}, '', [
				wp.element.createElement('p', {}, 'Shortcode:'),
				wp.element.createElement(wp.editor.PlainText,
						{
							value: props.attributes.text,
							onChange: onChangeShortcode,
							className: 'input-control',
						}),
				])
			];
	},

	save: function(props) {
        return wp.element.createElement(wp.element.RawHTML, null, props.attributes.text);
    },
} );

define("blocks", function(){});

}());